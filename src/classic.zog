module classic {
  fn _load() {
    scoreboard objectives add harl.classic.raycast
  }
  
  fn _tick() {
    execute as @a[tag=harl.on_classic_island] run function harl:classic/player
    execute as @e[type=item,tag=harl.classic.persistent] run data modify entity @s Age set value 0s
  }

  fn player() {
    execute if predicate harl:classic/is_sprinting run attribute @s minecraft:generic.movement_speed modifier add harl:no_sprint -0.25 add_multiplied_total
    execute unless predicate harl:classic/is_sprinting run attribute @s minecraft:generic.movement_speed modifier remove harl:no_sprint
  }

  fn enter() {
    tag @s add harl.on_classic_island
  }

  fn exit() {
    tag @s remove harl.on_classic_island
    attribute @s minecraft:generic.movement_speed modifier remove harl:no_sprint
  }

  module place_sand {
    fn init() {
      scoreboard players set $forward harl.classic.raycast 0
      scoreboard players set $down harl.classic.raycast 0
      execute at @s anchored eyes positioned ^ ^ ^ run function harl:classic/place_sand/raycast
    }

    fn raycast() {
      scoreboard players add $forward harl.classic.raycast 0
      execute if score $forward harl.classic.raycast matches 11.. run return -1
      execute unless block ~ ~ ~ #minecraft:air positioned ^ ^ ^-0.5 run function harl:classic/place_sand/raycast_down
      execute unless block ~ ~ ~ #minecraft:air run return -1
      execute positioned ^ ^ ^0.5 run function harl:classic/place_sand/raycast
    }

    fn raycast_down() {
      scoreboard players add $down harl.classic.raycast 0
      execute if score $down harl.classic.raycast matches 100.. run return -1
      execute unless block ~ ~ ~ #minecraft:air positioned ~ ~0.5 ~ run function harl:classic/place_sand/hit
      execute unless block ~ ~ ~ #minecraft:air run return -1
      execute positioned ~ ~-0.5 ~ run function harl:classic/place_sand/raycast_down
    }

    fn hit() {
      item modify entity @s weapon.mainhand {"function": "minecraft:set_count","count":-1,"add":true}
      setblock ~ ~ ~ sand
    }
  }


  res predicate is_sprinting {
    condition: "minecraft:entity_properties",
    entity: "this",
    predicate: {
      flags: {
        is_sprinting: true
      }
    }
  }

  res enchantment sand_placement {
    "description": "Classic sand placement",
    "supported_items": "minecraft:sand",
    "weight": 1,
    "max_level": 1,
    "min_cost": {
      "base": 0,
      "per_level_above_first": 0
    },
    "max_cost": {
      "base": 0,
      "per_level_above_first": 0
    },
    "anvil_cost": 0,
    "slots": [],
    "effects": {
      "minecraft:hit_block": [
        {
          "effect": {
            "type": "minecraft:run_function",
            "function": "harl:classic/place_sand/init"
          }
        }
      ]
    }
  }
}