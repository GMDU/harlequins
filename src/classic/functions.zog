fn init() {
  scoreboard objectives add harl.classic.raycast dummy
  scoreboard objectives add harl.classic.cooldown dummy
  execute in harl:void run function harl:classic/place_island
}

fn place_island() {
  forceload add -1500 -1500 -1453 -1453
  place template harl:classic/island -1500 0 -1500
  forceload remove -1500 -1500 -1453 -1453

  forceload add -1509 -1480
  place template harl:classic/bridge -1509 14 -1480
  forceload remove -1509 -1480
}

fn _tick() {
  execute as @a[tag=harl.classic.player] run function harl:classic/player
  kill @e[type=minecraft:item,nbt={Item:{components:{"minecraft:custom_data":{harl:{classic:{sand:true}}}}}}]
  execute as @e[type=marker,tag=harl.classic.sand_provider] at @s run tag @a[tag=!harl.classic.has_sand,distance=..1.5] add harl.classic.has_sand
}

fn player() {
  execute if predicate harl:classic/is_sprinting run attribute @s minecraft:generic.movement_speed modifier add harl:no_sprint -0.25 add_multiplied_total
  execute unless predicate harl:classic/is_sprinting run attribute @s minecraft:generic.movement_speed modifier remove harl:no_sprint

  execute if score @s harl.classic.cooldown matches 1.. run scoreboard players remove @s harl.classic.cooldown 1

  execute unless entity @s[tag=harl.classic.has_sand] if items entity @s container.* waxed_exposed_cut_copper_slab[minecraft:custom_data~{harl:{classic:{sand:true}}}] run tag @s add harl.classic.has_sand
  execute if entity @s[tag=harl.classic.has_sand] unless items entity @s container.* waxed_exposed_cut_copper_slab[minecraft:custom_data~{harl:{classic:{sand:true}}}] run function harl:classic/give_sand
}

fn reset() {
  # TODO: probably blocks need to be reset
}

fn enter() {
  tag @s add harl.classic.player
  effect give @s resistance infinite 255 true
}

fn exit() {
  tag @s remove harl.classic.player
  tag @s remove harl.classic.has_sand
  attribute @s minecraft:generic.movement_speed modifier remove harl:no_sprint
  effect clear @s resistance
}

fn give_sand() {
  give @s waxed_exposed_cut_copper_slab[minecraft:enchantments={levels:{"harl:classic/sand_placement":1},show_in_tooltip:false},minecraft:enchantment_glint_override=false,minecraft:item_name='{"text":"Sand","color":"white"}',minecraft:custom_data={harl:{classic:{place_mode:false, sand: true}}},minecraft:food={nutrition:0, saturation:0, can_always_eat:true, eat_seconds:999999999},minecraft:can_break={show_in_tooltip:false},minecraft:custom_model_data=114004]
}

fn switch_sand_mode() {
  item modify entity @s weapon.mainhand harl:classic/switch_sand_mode
  schedule function harl:classic/revoke_sand_advancement 4t replace
}

fn revoke_sand_advancement() {
  advancement revoke @a[advancements={harl:classic/click_sand=true}] only harl:classic/click_sand
}

module place_sand {
  fn init() {
    execute if score @s harl.classic.cooldown matches 1.. run return -1
    scoreboard players set @s harl.classic.cooldown 4
    scoreboard players set $forward harl.classic.raycast 0
    scoreboard players set $down harl.classic.raycast 0
    execute at @s anchored eyes positioned ^ ^ ^ run function harl:classic/place_sand/raycast
  }

  fn raycast() {
    scoreboard players add $forward harl.classic.raycast 1
    execute if score $forward harl.classic.raycast matches 11.. run return -1
    execute unless block ~ ~ ~ #minecraft:air positioned ^ ^ ^-0.5 run function harl:classic/place_sand/raycast_down
    execute unless block ~ ~ ~ #minecraft:air run return -1
    execute positioned ^ ^ ^0.5 run function harl:classic/place_sand/raycast
  }

  fn raycast_down() {
    scoreboard players add $down harl.classic.raycast 1
    execute if score $down harl.classic.raycast matches 100.. run return -1
    execute unless block ~ ~ ~ #minecraft:air positioned ~ ~0.5 ~ run function harl:classic/place_sand/hit
    execute unless block ~ ~ ~ #minecraft:air run return -1
    execute positioned ~ ~-0.5 ~ run function harl:classic/place_sand/raycast_down
  }

  fn hit() {
    setblock ~ ~ ~ waxed_exposed_cut_copper_slab[type=double,waterlogged=true]
  }
}

module break {
  fn init() {
    execute if score @s harl.classic.cooldown matches 1.. run return -1
    scoreboard players set @s harl.classic.cooldown 4
    scoreboard players set $forward harl.classic.raycast 0
    execute at @s anchored eyes positioned ^ ^ ^ run function harl:classic/break/raycast
  }

  fn raycast() {
    scoreboard players add $forward harl.classic.raycast 1
    execute if score $forward harl.classic.raycast matches 11.. run return -1
    execute unless block ~ ~ ~ #minecraft:air run return run function harl:classic/break/hit
    execute positioned ^ ^ ^0.5 run function harl:classic/break/raycast
  }

  fn hit() {
    gamerule doTileDrops false
    setblock ~ ~ ~ air destroy
    stopsound @a[distance=..16] block
    gamerule doTileDrops true
  }
}
